import React from 'react';
import type { IJodit } from 'jodit/types/types/jodit';
import type { Jodit as JoditBaseConstructor } from 'jodit/types/index';
import type { Config as BaseConfig } from 'jodit/config';
import type { Config } from 'jodit/types/config';
import { Jodit } from './include.jodit';
import type { DeepPartial } from 'jodit/types/types';
interface Props<T extends typeof JoditBaseConstructor = typeof Jodit> {
    JoditConstructor?: T;
    config?: DeepPartial<Config & BaseConfig>;
    className?: string;
    id?: string;
    name?: string;
    onBlur?: (value: string, event: MouseEvent) => void;
    onChange?: (value: string) => void;
    tabIndex?: number;
    value?: string;
    editorRef?: (editor: IJodit) => void;
}
declare const JoditEditor: React.ForwardRefExoticComponent<Props<typeof JoditBaseConstructor> & React.RefAttributes<IJodit>>;
export default JoditEditor;
